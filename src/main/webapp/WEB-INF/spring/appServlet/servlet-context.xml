<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd"> 

<!-- DispatcherServlet Context: defines this servlet`s request-processing infrastructure -->
<!-- Enables the Spring MVC @Controller programming model -->
	<context:component-scan	base-package="com.CatchJob.controller" />
	<mvc:annotation-driven />

	<!-- 트랜잭션 매니저 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- Annotation 기반 트랜잭션 설정 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	
<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</bean>	
	
	<context:property-placeholder location="/WEB-INF/config/*.properties" />
	
	<!-- google Class Bean설정 추가 -->
	<!-- 클라이언트ID와 보안비밀 세팅 -->
	<bean id="googleConnectionFactory"  class="org.springframework.social.google.connect.GoogleConnectionFactory">
	  <constructor-arg value="${google.client_id}" />
	  <constructor-arg value="${google.client_secret}" />
	</bean>
	<!-- 승인된 자바스크립트 원본과 승인된 리디렉션 URI -->
	<bean id="googleOAuth2Parameters" class="org.springframework.social.oauth2.OAuth2Parameters">
	  <property name="scope" value="https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/plus.login " />
	  <property name="redirectUri" value="http://${localhost}/member/googleSignInCallback" />
	</bean>

<!-- 	<bean id="connectionFactoryLocator" class="org.springframework.social.connect.support.ConnectionFactoryRegistry">  -->
<!-- 		<property name="connectionFactories">  -->
<!-- 			<bean class="org.springframework.social.facebook.connect.FacebookConnectionFactory"> -->
<!-- 				<constructor-arg value="${facebook.client_id}" />  -->
<!-- 				<constructor-arg value="${facebook.client_secret}" />  -->
<!-- 			</bean>  -->
<!-- 		</property> -->
<!-- 	</bean>  -->
	
<!-- 	<bean id="inMemoryConnectionRepository" class="org.springframework.social.connect.mem.InMemoryConnectionRepository">  -->
<!-- 		<constructor-arg ref="connectionFactoryLocator" />  -->
<!-- 	</bean> -->
	
 	<bean id="connectionFactory"
        class="org.springframework.social.facebook.connect.FacebookConnectionFactory">
        <constructor-arg value="${facebook.client_id}" />
        <constructor-arg value="${facebook.client_secret}" />
    </bean>
 
    <bean id="oAuth2Parameters"
        class="org.springframework.social.oauth2.OAuth2Parameters">
        <property name="scope" value="email" />
        <property name="redirectUri" value="https://${localhost}/member/oAuth2Callback" />
    </bean>
	
	<!-- 메일 보내기 (SEND) -->
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
    	<property name="host" value="smtp.gmail.com" />
	    <property name="port" value="587" />
	    <property name="username" value="${google.mail_id}" />
	    <property name="password" value="${google.mail_pw}" />
	    
        <!-- email 요청시는 SMTP -->
		<property name="javaMailProperties">
		   <props>
		      <prop key="mail.transport.protocol">smtp</prop>
		      <prop key="mail.smtp.auth">true</prop>
		      <prop key="mail.smtp.starttls.enable">true</prop>
		      <prop key="mail.debug">true</prop>
		   </props>
		</property>
	</bean>
	
</beans>
