<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.CatchJob.dao.ReviewDao">
	<!-- 리뷰 등록 -->
	<insert id="insertReview" parameterType="review">
		INSERT INTO REVIEW_TB (ENT_IDX,MBER_IDX,QESTN_NO,`CONTENTS`,EVALUATION,REVW_FL,REG_DT)
		VALUES (#{entIndex},${mberIndex},#{questionNum},#{contents},#{evaluationScore},#{reviewFlag},sysdate())
	</insert>
	<update id="updateReview" parameterType="review">
		UPDATE REVIEW_TB
		SET `CONTENTS`=#{contents}, EVALUATION=#{evaluationScore}
		WHERE ENT_IDX=#{entIndex} AND MBER_IDX=${mberIndex} AND QESTN_NO=#{questionNum}
	</update>
	<delete id="deleteReview" parameterType="map">
		DELETE FROM REVIEW_TB
		WHERE ENT_IDX=#{entIndex} AND MBER_IDX=${mberIndex} AND QESTN_NO=#{questionNum}
	</delete>
	<!-- 질문가져오기 -->
	<select id="question" parameterType="int"  resultType="map">
		SELECT qes.QESTN_NO, qes.QUESTION, count(rev.QESTN_NO) as COUNT, sum(rev.EVALUATION) as SUM, round(avg(rev.EVALUATION),1) as AVG
		FROM   REVIEW_QESTN_TB qes
		LEFT OUTER JOIN REVIEW_TB rev
		ON qes.QESTN_NO = rev.QESTN_NO
		AND rev.ENT_IDX=#{entIndex}
		GROUP BY qes.QESTN_NO
		ORDER BY qes.QESTN_NO;	
	</select>
	<select id="reviewList" parameterType="int" resultMap="reviewMap">		
		SELECT * 
		FROM REVIEW_QESTN_TB q
		LEFT JOIN REVIEW_TB r
		ON r.QESTN_NO=q.QESTN_NO
		WHERE r.ENT_IDX=#{entIndex}  
		ORDER BY r.REG_DT desc
	</select>
	<!-- 수정/삭제페이지에서 뿌려줄 데이터  -->
	<select id="reviewListByMember" parameterType="int" resultMap="reviewMap">
		SELECT  e.ENT_IDX,e.ENT_NM, q.QESTN_NO, q.QUESTION, r.REG_DT
		FROM REVIEW_QESTN_TB q
		LEFT JOIN REVIEW_TB r
		ON r.QESTN_NO=q.QESTN_NO
		LEFT JOIN ENTERPRISE_TB e		
		ON r.ENT_IDX=e.ENT_IDX
		WHERE r.MBER_IDX=#{mberIndex}
		ORDER BY r.REG_DT desc
	</select>
	<!-- 수정 할 데이터 가져오기 -->
	<select id="review" parameterType="map" resultMap="reviewMap">
		SELECT e.ENT_NM, q.QUESTION, r.*
		FROM REVIEW_QESTN_TB q
		LEFT JOIN REVIEW_TB r
		ON r.QESTN_NO=q.QESTN_NO
		LEFT JOIN ENTERPRISE_TB e		
		ON r.ENT_IDX=e.ENT_IDX
		WHERE r.MBER_IDX=#{mberIndex} AND e.ENT_IDX=#{entIndex} AND q.QESTN_NO=#{questionNum}	
	</select> 
	<!-- 
	<select id="reviewListByQNum" parameterType="map" resultMap="reviewMap">
		SELECT * 
		FROM REVIEW_QESTN_TB q
		LEFT JOIN REVIEW_TB r
		ON r.QESTN_NO=q.QESTN_NO
		WHERE r.ENT_IDX=#{entIndex} AND r.QESTN_NO=#{questionNum} 
		ORDER BY r.REVW_IDX desc
	</select>
	 -->
 <!-- 리뷰코멘트 VIEW 페이지에서 페이징처리 -->
	 <select id="selectReviewsList" parameterType="map" resultMap="reviewMap">
	 	SELECT SQL_CALC_FOUND_ROWS * 
		FROM REVIEW_QESTN_TB q
		LEFT JOIN REVIEW_TB r
		ON r.QESTN_NO=q.QESTN_NO
		WHERE r.ENT_IDX=#{ENT_IDX} AND r.QESTN_NO=#{QESTN_NO}
		ORDER BY r.REG_DT desc
		LIMIT #{NUM_OF_RVW_PER_PAGE}
		OFFSET #{START_ROW}
	 </select>
	 <select id="selectReviewTotalRows" parameterType="map" resultType="int">
		SELECT 	 count(*) AS TOTAL_ROWS 
		FROM	 REVIEW_TB
		WHERE	 ENT_IDX=#{ENT_IDX} AND QESTN_NO=#{QESTN_NO}
	</select>

	<select id="selectCount" resultType="int" parameterType="String">
		SELECT COUNT(*)
		FROM REVIEW_TB
	</select>
	<select id="selectReviewList" resultMap="reviewMap" parameterType="map">
		SELECT * FROM (	
			SELECT @ROWNUM:=@ROWNUM+1 AS RNUM, m.MBER_IDX, m.MBER_ID, e.ENT_NM, r.ENT_IDX, r.QESTN_NO, r.CONTENTS
			from
			REVIEW_TB r 
			INNER join MEMBER_TB m 
			on r.MBER_IDX = m.MBER_IDX
			INNER join ENTERPRISE_TB e
			on r.ENT_IDX = e.ENT_IDX, 
			(select @ROWNUM := 0) a 
			) p
		WHERE RNUM BETWEEN #{firstRow} AND #{endRow}
		AND ENT_IDX LIKE CONCAT('%',#{entIndexKeyword},'%')  
		AND ENT_NM LIKE CONCAT('%',#{entNameKeyword},'%') AND QESTN_NO LIKE CONCAT('%',#{questionNumKeyword},'%');
		
		
	</select>
	<resultMap type="review" id="reviewMap">
		<result property="entName" column="ENT_NM"/>
		<result property="question" column="QUESTION"/>
		<result property="reviewIndex" column="REVW_IDX"/>		<!-- 리뷰 식별번호 -->
		<result property="entIndex" column="ENT_IDX"/>			<!--기업 식별번호  -->
		<result property="mberIndex" column="MBER_IDX"/>		<!-- 회원 식별번호 -->
		<result property="questionNum" column="QESTN_NO"/>		<!-- 질문 식별번호 -->
		<result property="evaluationScore" column="EVALUATION"/>	<!-- 기업 평가 점수 -->
		<result property="contents" column="CONTENTS"/>		<!--  리뷰 내용-->
		<result property="reviewFlag" column="REVW_FL"/>		<!-- 리뷰 상태(1:사용,2:삭제,3:대기) TODO -->
		<result property="regDate" column="REG_DT"/>			<!-- 작성일 -->
	</resultMap>
</mapper>
